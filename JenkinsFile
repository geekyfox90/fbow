def version

pipeline {
    agent {
        label "jenkins-slave-argo-qmake"
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    parameters {
        gitParameter branchFilter: 'origin/(.*)', type: 'PT_BRANCH', selectedValue: 'DEFAULT',
                name: 'BRANCH', defaultValue: 'develop', useRepository: '.*fbow.git'
        booleanParam(name: 'RELEASE',
            defaultValue: false,
            description: 'Create a Release')                
    }
    stages {

        stage("Checkout"){
            steps {
                sh "git checkout ${BRANCH}"
            }
        }

        stage("Get Third Parties") {
             steps {
                 getThirdParties('1.0.0')
             }
        }

        stage("Build") {
            steps {
                withEnv(['REMAKEN_RULES_ROOT=/home/jenkins/.remaken/rules/']) {
                    sh "qmake fbow.pro"
                    sh "make"
                    sh "make install"
                }
            }
        }

        stage("Build Debug") {
            when {
                expression { params.RELEASE == true }
            }              
            steps {
                withEnv(['REMAKEN_RULES_ROOT=/home/jenkins/.remaken/rules/']) {
                    sh "qmake fbow.pro CONFIG+=debug"
                    sh "make"
                    sh "make install"
                }
            }
        }        

        stage("Release") {
            when {
                expression { params.RELEASE == true }
            }            
            steps {
                script {
                    version = sh (
                        script: "cat *.pro  | grep VERSION | head -1 | cut -d '=' -f 2",
                        returnStdout: true
                    )
                    version = version.replace("\n","")
                }
                prepareRelease("thirdParties","linux-gcc","fbowSolAR")
                withCredentials([string(credentialsId: 'github-token', variable: 'token')]) {
                    release("fbow","fbow/${version}/linux","${WORKSPACE}/artifactory/x86_64_shared_release/fbowSolAR_${version}_x86_64_shared_release.zip ${WORKSPACE}/artifactory/x86_64_shared_debug/fbowSolAR_${version}_x86_64_shared_debug.zip",token);
                }
            }
        }        
    }

}
